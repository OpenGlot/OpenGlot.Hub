services:
  reverse-proxy:
    image: nginx:alpine
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx-dev.conf:/etc/nginx/conf.d/default.conf:ro
    command: >
      sh -c "
        apk add --no-cache openssl
        mkdir -p /etc/nginx/certs
        if [ ! -f /etc/nginx/certs/localhost.crt ]; then
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/certs/localhost.key -out /etc/nginx/certs/localhost.crt -subj '/CN=localhost';
        fi;
        ls /etc/nginx/certs
        nginx -g 'daemon off;'
      "
    depends_on:
      - api
      - frontend
    networks:
      - webnet

  db:
    restart: always
    build:
      context: ./db
      dockerfile: Dockerfile
    environment:
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -p 5432 -U myuser -d mydatabase']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - webnet

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.Dev
    depends_on:
      - db
    environment:
      - NODE_ENV=development
    networks:
      - webnet

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - '8080:80'
    volumes:
      - ./frontend/app:/app
      - ./frontend:/frontend
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - webnet
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:8080 || exit 1']
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  webnet:
    driver: bridge
